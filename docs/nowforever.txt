[[cha:nowforever-vfd-driver]]

= Nowforever D100/E100 VFD Driver

This is a userspace HAL program for the D100 and E100 series VFD's at
Nowforever. 
It might work for other models as well.

This component is loaded using the halcmd "loadusr" command:
----
loadusr -Wn spindle-vfd nowforever_vfd -n spindle-vfd 
----

The above command says: loadusr, wait for named to load, 
component nowforever_vfd, named spindle-vfd

== Command Line Options


* '-d, --device <path>' (default /dev/ttyUSB0) Set the name of the serial
device to use 
* '-n, --name <string>' (default nowforever_vfd) Set the name of the HAL
module. The HAL comp name will be set to <string>, and all pin and
parameter names will begin with <string>. 
* '-p, --parity {even,odd,none}' (default none) Set serial parity to
      even, odd, or none. 
* '-r, --rate <n>' (default 19200) Set baud rate to <n>. It is an error
if the rate is not one of the following: 2400, 4800, 9600, 19200, 38400
* '-t, --target <n>' (default 1) Set MODBUS target (slave) number. This
must match the device number you set on the Nowforever VFD. 
* '-v, --verbose' Turn on verbose mode.
* '-h, --help' Show this help.


This VFD only support 8 data bit and 1 stop bit.

The verbose flag will show all commands being sent and returned from the VFD.

== Pins

Where <n> is nowforever_vfd or the name given during loading with the -n option.

* '<n>.inverter-status' (s32, out) Drive Status of the VFD
* '<n>.DC-bus-volt' (float, out) The DC bus voltage of the VFD
* '<n>.at-speed' (bit, out) when drive is at commanded speed
* '<n>.frequency-command' (float, out) from the VFD
* '<n>.frequency-out' (float, out) from the VFD
* '<n>.is-stopped' (bit, out) when the VFD reports 0 Hz output
* '<n>.load-percentage' (float, out) from the VFD
* '<n>.motor-RPM' (float, out) from the VFD
* '<n>.output-current' (float, out) from the VFD
* '<n>.output-volt' (float, out) from the VFD
* '<n>.inverter-temp' (float, out) from the VFD
* '<n>.vfd-error' (bit, out) 1 for error, 0 for no error
* '<n>.speed-command' (float, in) speed sent to VFD in RPM 
* '<n>.spindle-fwd' (bit, in) 1 for FWD and 0 for REV sent to VFD
* '<n>.spindle-rev' (bit, in) 1 for REV and 0 if off
* '<n>.spindle-on' (bit, in) 1 for ON and 0 for OFF sent to VFD



The 'inverter-status' is the inverter running state.

Bit 1: Run        1 = run,       0 = stop

Bit 2: Direction  1 = reverse,   0 = forward

Bit 3: Control    1 = local,     0 = remote

Bit 4: Warning    1 = warning,   0 = no warning

Bit 5: Error      1 = error,     0 = no error

Bit 4 and 5 is translated, since the manual is somewhat unclear.
The maual says 'slight fault' and 'fault'. 
If any of these bit are high, pin 'vfd-error' goes high.

This driver is based an an spindle with 24000 RPM at 400.00 Hz. The driver calculates the input frequency 
from RPM received from LinuxCNC. This means that if you have a spindle which have a different configuration,
the scaling might not be correct

The pin 'frequency-command' is limited to 400.00 Hz.

== Parameters

Where <n> is nowforever_vfd or the name given during loading with the -n option.

* '<n>.modbus-errors' (s32, RO)
* '<n>.retval' (s32, RO) the return value of an error in HAL
* '<n>.tolerance' (float, RW) speed tolerance (default 0.01)
* '<n>.period-seconds' (float, RW) how often the modbus is polled (default 0.1)

  
For an example of using this component to drive a spindle see the
<<cha:nowforever-spindle,Nowforever D100/E100 Spindle>> example.

